// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OtroEF.Models;

namespace OtroEF.Migrations
{
    [DbContext(typeof(OtroEFContext))]
    [Migration("20200224212902_InitialCreate4")]
    partial class InitialCreate4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("OtroEF.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Employee01"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Employee02"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Employee03"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Employee04"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Employee05"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Employee06"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Employee07"
                        });
                });

            modelBuilder.Entity("OtroEF.Models.PartReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateReview")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Diagnosis")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("VehiclePartId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleReviewId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("VehiclePartId");

                    b.HasIndex("VehicleReviewId");

                    b.ToTable("PartReviews");
                });

            modelBuilder.Entity("OtroEF.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LicensePlate")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Line")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Model")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Opel",
                            LicensePlate = "AAA111",
                            Line = "Corsa",
                            Model = 2008
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Renault",
                            LicensePlate = "AAA112",
                            Line = "Sandero",
                            Model = 2009
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Chevrolet",
                            LicensePlate = "AAA113",
                            Line = "Sail",
                            Model = 2010
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Opel",
                            LicensePlate = "AAA114",
                            Line = "Corsa",
                            Model = 2011
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Renault",
                            LicensePlate = "AAA115",
                            Line = "Logan",
                            Model = 2012
                        },
                        new
                        {
                            Id = 6,
                            Brand = "Chevrolet",
                            LicensePlate = "AAA116",
                            Line = "Corsa",
                            Model = 2013
                        },
                        new
                        {
                            Id = 7,
                            Brand = "Opel",
                            LicensePlate = "AAA117",
                            Line = "Corsa",
                            Model = 2014
                        },
                        new
                        {
                            Id = 8,
                            Brand = "Renault",
                            LicensePlate = "AAA118",
                            Line = "symbol",
                            Model = 2015
                        });
                });

            modelBuilder.Entity("OtroEF.Models.VehiclePart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("VehicleParts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Vehicle part 01"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Vehicle part 02"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Vehicle part 03"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Vehicle part 04"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Vehicle part 05"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Vehicle part 06"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Vehicle part 07"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Vehicle part 08"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Vehicle part 09"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Vehicle part 10"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Vehicle part 11"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Vehicle part 12"
                        });
                });

            modelBuilder.Entity("OtroEF.Models.VehicleReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateReview")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleReviews");
                });

            modelBuilder.Entity("OtroEF.Models.PartReview", b =>
                {
                    b.HasOne("OtroEF.Models.Employee", "Employee")
                        .WithMany("PartReviews")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OtroEF.Models.VehiclePart", "VehiclePart")
                        .WithMany("PartReviews")
                        .HasForeignKey("VehiclePartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OtroEF.Models.VehicleReview", "VehicleReview")
                        .WithMany("PartReviews")
                        .HasForeignKey("VehicleReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OtroEF.Models.VehicleReview", b =>
                {
                    b.HasOne("OtroEF.Models.Employee", "Employee")
                        .WithMany("VehicleReviews")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OtroEF.Models.Vehicle", "Vehicle")
                        .WithMany("VehicleReviews")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
